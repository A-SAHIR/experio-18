version: "2"
services:
    postgres:
        image: postgres:11
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASS}
            - POSTGRES_DB=postgres
        ports:
            - "${POSTGRES_PORT}:5432"
        restart: "no"
        volumes:
            - ./store/postgres:/var/lib/postgresql/data

    odoo:
        build:
            dockerfile: ./docker/odoo/Dockerfile
            context: .
        depends_on:
            - postgres
        ports:
            - "${ODOO_PORT}:8069"
        extra_hosts:
          - "host.docker.internal:host-gateway"
        command: -- --dev=reload,xml
        environment:
            - HOST=postgres
            - USER=${POSTGRES_USER}
            - PASSWORD=${POSTGRES_PASS}
        volumes:
            # - ./addons:/mnt/extra-addons
            - ./scripts:/mnt/scripts
            - ./exp-base:/mnt/exp-base
            - ./exp-accounting:/mnt/exp-accounting
            - ./exp-cognitive:/mnt/exp-cognitive
            - ./exp-multicomp:/mnt/exp-multicomp
            - ./odoo.conf:/etc/odoo/odoo.conf
            - ./odoo:/usr/lib/python3/dist-packages/odoo
            - ./store/odoo:/var/lib/odoo
        restart: "no"
        tty: true

    cron:
        build:
            context: .
            dockerfile: docker/cron/Dockerfile
        restart: "no"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            - POSTGRES_HOST=postgres
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASS}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DB=postgres
        volumes:
          - ./cron/container_cronjob:/etc/cron.d/container_cronjob
          - ./cron/entrypoint.sh:/cron/entrypoint.sh
          - ./cron/scripts/reset_connections.py:/cron/reset_connections.py
          - ./.env:/cron/.env
        depends_on:
          - postgres

volumes:
    postgres:
    odoo:
